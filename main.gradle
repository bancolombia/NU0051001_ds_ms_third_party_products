allprojects {
    repositories {
        maven { url "https://artifactory.apps.bancolombia.com/maven-bancolombia" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
    javadoc.options.encoding = 'UTF-8'

    compileJava.dependsOn validateStructure
    sourceCompatibility = JavaVersion.VERSION_17
    test {
        useJUnitPlatform()
    }
    dependencies {
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        implementation 'io.projectreactor:reactor-core'
        implementation 'io.projectreactor.addons:reactor-extra'

        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }

    configurations {
        implementation {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        }
        dependencies {
            dependency "org.springdoc:springdoc-openapi-webflux-ui:$springDocVersion"
            dependency "co.com.bancolombia:technical-log:$technicalLogVersion"
        }
    }

    test.finalizedBy(project.tasks.jacocoTestReport)

    jacocoTestReport {
        dependsOn test
        reports {
            xml.setRequired true
            xml.setOutputLocation file("${buildDir}/reports/jacoco.xml")
            csv.setRequired false
            html.setOutputLocation file("${buildDir}/reports/jacocoHtml")
        }
    }

}

jacoco {
    toolVersion = "${jacocoVersion}"
    reportsDirectory.set(file("$buildDir/reports"))
}

tasks.register('jacocoMergedReport', JacocoReport) {
    dependsOn = subprojects.jacocoTestReport
    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(subprojects.sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
    reports {
        xml.setRequired true
        csv.setRequired false
        html.setRequired true
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}
tasks.named('wrapper') {
    gradleVersion = '7.6.1'
}